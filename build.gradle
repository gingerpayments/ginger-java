plugins {
    id 'java-library'
    id 'maven-publish'
    id 'signing'
}

group = 'com.gingerpayments'
version = '2.1.0'
archivesBaseName = project.name

repositories {
    mavenCentral()
}

sourceSets {
    examples {
        compileClasspath += sourceSets.main.output
        runtimeClasspath += sourceSets.main.output
    }
}

configurations {
    examplesImplementation.extendsFrom implementation
    examplesRuntimeOnly.extendsFrom runtimeOnly
}

dependencies {
    api 'com.squareup.okhttp3:okhttp:4.9.1'
    api 'org.json:json:20201115'

    testImplementation 'junit:junit:4.13.1'
    testImplementation("com.squareup.okhttp3:mockwebserver:4.9.1")

    examplesImplementation 'junit:junit:4.13.1'
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar, sourcesJar
}

task examples(type: Test) {
    description = 'Runs examples.'

    testLogging {
        events "standardOut", "standardError"
        outputs.upToDateWhen { false }
    }

    if (!System.getenv('GINGER_ENDPOINT')) { throw new StopExecutionException("Please configure GINGER_ENDPOINT") }
    if (!System.getenv('GINGER_API_KEY')) { throw new StopExecutionException("Please configure GINGER_API_KEY") }

    testClassesDirs = sourceSets.examples.output.classesDirs
    classpath = sourceSets.examples.runtimeClasspath
    shouldRunAfter test
}

tasks.withType(Sign) {
    onlyIf { gradle.taskGraph.hasTask("publish") }
}

jar {
    manifest {
        attributes('Implementation-Title': project.name,
                   'Implementation-Version': project.version)
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            pom {
                name = project.group + ':' + project.name
                description = 'Java SDK for connecting to APIs managed by Ginger Payments.'
                url = 'https://github.com/gingerpayments/ginger-java'

                licenses {
                    license {
                        name = 'MIT License'
                        url = 'https://opensource.org/licenses/MIT'
                    }
                }

                developers {
                    developer {
                        organization = 'Ginger'
                        organizationUrl = 'https://www.gingerpayments.com/'
                    }
                }

                scm {
                    connection = 'scm:git:git://github.com/gingerpayments/ginger-java.git'
                    developerConnection = 'scm:git:ssh://github.com:gingerpayments/ginger-java.git'
                    url = 'https://github.com/gingerpayments/ginger-java/tree/master'
                }
            }

            repositories {
                maven {
                    def releasesRepoUrl = 'https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/'
                    def snapshotsRepoUrl = 'https://s01.oss.sonatype.org/content/repositories/snapshots/'
                    url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
                    credentials {
                        username = ossrhUsername
                        password = ossrhPassword
                    }
                }
            }
        }
    }
}

signing {
    useGpgCmd()
    sign configurations.archives
    sign publishing.publications.mavenJava
}
